


import {isDeclaration} from "./parser/tokenizer";
import {ContextualKeyword} from "./parser/tokenizer/keywords";
import {TokenType as tt} from "./parser/tokenizer/types";

import getImportExportSpecifierInfo from "./util/getImportExportSpecifierInfo";
import {getNonTypeIdentifiers} from "./util/getNonTypeIdentifiers";
















/**
 * Class responsible for preprocessing and bookkeeping import and export declarations within the
 * file.
 *
 * TypeScript uses a simpler mechanism that does not use functions like interopRequireDefault and
 * interopRequireWildcard, so we also allow that mode for compatibility.
 */
export default class CJSImportProcessor {
   __init() {this.nonTypeIdentifiers = new Set()}
   __init2() {this.importInfoByPath = new Map()}
   __init3() {this.importsToReplace = new Map()}
   __init4() {this.identifierReplacements = new Map()}
   __init5() {this.exportBindingsByLocalName = new Map()}

  constructor(
     nameManager,
     tokens,
     enableLegacyTypeScriptModuleInterop,
     options,
     isTypeScriptTransformEnabled,
     keepUnusedImports,
     helperManager,
  ) {;this.nameManager = nameManager;this.tokens = tokens;this.enableLegacyTypeScriptModuleInterop = enableLegacyTypeScriptModuleInterop;this.options = options;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.keepUnusedImports = keepUnusedImports;this.helperManager = helperManager;CJSImportProcessor.prototype.__init.call(this);CJSImportProcessor.prototype.__init2.call(this);CJSImportProcessor.prototype.__init3.call(this);CJSImportProcessor.prototype.__init4.call(this);CJSImportProcessor.prototype.__init5.call(this);}

  preprocessTokens() {
    for (let i = 0; i < this.tokens.tokens.length; i++) {
      if (
        this.tokens.matches1AtIndex(i, tt._import) &&
        !this.tokens.matches3AtIndex(i, tt._import, tt.name, tt.eq)
      ) {
        this.preprocessImportAtIndex(i);
      }
      if (
        this.tokens.matches1AtIndex(i, tt._export) &&
        !this.tokens.matches2AtIndex(i, tt._export, tt.eq)
      ) {
        this.preprocessExportAtIndex(i);
      }
    }
    this.generateImportReplacements();
  }

  /**
   * In TypeScript, import statements that only import types should be removed.
   * This includes `import {} from 'foo';`, but not `import 'foo';`.
   */
  pruneTypeOnlyImports() {
    this.nonTypeIdentifiers = getNonTypeIdentifiers(this.tokens, this.options);
    for (const [path, importInfo] of this.importInfoByPath.entries()) {
      if (
        importInfo.hasBareImport ||
        importInfo.hasStarExport ||
        importInfo.exportStarNames.length > 0 ||
        importInfo.namedExports.length > 0
      ) {
        continue;
      }
      const names = [
        ...importInfo.defaultNames,
        ...importInfo.wildcardNames,
        ...importInfo.namedImports.map(({localName}) => localName),
      ];
      if (names.every((name) => this.shouldAutomaticallyElideImportedName(name))) {
        this.importsToReplace.set(path, "");
      }
    }
  }

  shouldAutomaticallyElideImportedName(name) {
    return (
      this.isTypeScriptTransformEnabled &&
      !this.keepUnusedImports &&
      !this.nonTypeIdentifiers.has(name)
    );
  }

   generateImportReplacements() {
    for (const [path, importInfo] of this.importInfoByPath.entries()) {
      const {
        defaultNames,
        wildcardNames,
        namedImports,
        namedExports,
        exportStarNames,
        hasStarExport,
      } = importInfo;

      if (
        defaultNames.length === 0 &&
        wildcardNames.length === 0 &&
        namedImports.length === 0 &&
        namedExports.length === 0 &&
        exportStarNames.length === 0 &&
        !hasStarExport
      ) {
        // Import is never used, so don't even assign a name.
        this.importsToReplace.set(path, `require('${path}');`);
        continue;
      }

      const primaryImportName = this.getFreeIdentifierForPath(path);
      let secondaryImportName;
      if (this.enableLegacyTypeScriptModuleInterop) {
        secondaryImportName = primaryImportName;
    s\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*EEE\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*FlowControl">
      <registryValue name="default" valueType="REG_SZ" value="3" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Flow Control" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*FlowControl\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Tx Enabled" />
      <registryValue name="2" valueType="REG_SZ" value="Rx Enabled" />
      <registryValue name="3" valueType="REG_SZ" value="Rx &amp; Tx Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*IPChecksumOffloadIPv4">
      <registryValue name="default" valueType="REG_SZ" value="3" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="IPv4 Checksum Offload" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*IPChecksumOffloadIPv4\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Tx Enabled" />
      <registryValue name="2" valueType="REG_SZ" value="Rx Enabled" />
      <registryValue name="3" valueType="REG_SZ" value="Rx &amp; Tx Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*JumboPacket">
      <registryValue name="base" valueType="REG_SZ" value="10" />
      <registryValue name="default" valueType="REG_SZ" value="1514" />
      <registryValue name="max" valueType="REG_SZ" value="9230" />
      <registryValue name="min" valueType="REG_SZ" value="1514" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Jumbo Frame Size" />
      <registryValue name="step" valueType="REG_SZ" value="1" />
      <registryValue name="type" valueType="REG_SZ" value="int" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*LsoV1IPv4">
      <registryValue name="default" valueType="REG_SZ" value="1" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Large Send Offload V1 (IPv4)" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*LsoV1IPv4\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*LsoV2IPv4">
      <registryValue name="default" valueType="REG_SZ" value="1" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Large Send Offload V2 (IPv4)" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*LsoV2IPv4\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*LsoV2IPv6">
      <registryValue name="default" valueType="REG_SZ" value="1" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Large Send Offload V2 (IPv6)" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*LsoV2IPv6\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*NumRSSQueues">
      <registryValue name="base" valueType="REG_SZ" value="10" />
      <registryValue name="default" valueType="REG_SZ" value="4" />
      <registryValue name="max" valueType="REG_SZ" value="4" />
      <registryValue name="min" valueType="REG_SZ" value="1" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Maximum Number of RSS Queues" />
      <registryValue name="step" valueType="REG_SZ" value="1" />
      <registryValue name="type" valueType="REG_SZ" value="int" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*PMARPOffload">
      <registryValue name="default" valueType="REG_SZ" value="1" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="PM ARP Offload" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*PMARPOffload\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*PMNSOffload">
      <registryValue name="default" valueType="REG_SZ" value="1" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="PM NS Offload" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*PMNSOffload\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*PriorityVLANTag">
      <registryValue name="default" valueType="REG_SZ" value="3" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Packet Priority &amp; VLAN" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*PriorityVLANTag\enum">
      <registryValue name="0" valueType="REG_SZ" value="Packet Priority &amp; VLAN Disabled" />
      <registryValue name="3" valueType="REG_SZ" value="Packet Priority &amp; VLAN Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*RSS">
      <registryValue name="default" valueType="REG_SZ" value="1" />
      <registryValue name="ParamDesc" valueType="REG_SZ" value="Receive Side Scaling" />
      <registryValue name="type" valueType="REG_SZ" value="enum" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*RSS\enum">
      <registryValue name="0" valueType="REG_SZ" value="Disabled" />
      <registryValue name="1" valueType="REG_SZ" value="Enabled" />
      <securityDescriptor name="62791918C58049A69FA4D51EF72F68381DD90E4C" />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase\DriverPackages\net7400-x64-n650.inf_amd64_72d4ef7c40dbff79\Configurations\LAN7400.ndi.ntamd64\Driver\Ndi\Params\*SelectiveSuspend">
      <registryValue name="default" valueType="REG_SZ" value=